// Code generated by go-swagger; DO NOT EDIT.

package phone_home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostLogReader is a Reader for the PostLog structure.
type PostLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostLogOK creates a PostLogOK with default headers values
func NewPostLogOK() *PostLogOK {
	return &PostLogOK{}
}

/*PostLogOK handles this case with default header values.

Log event successfully ingested
*/
type PostLogOK struct {
}

func (o *PostLogOK) Error() string {
	return fmt.Sprintf("[POST /log][%d] postLogOK ", 200)
}

func (o *PostLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostLogBadRequest creates a PostLogBadRequest with default headers values
func NewPostLogBadRequest() *PostLogBadRequest {
	return &PostLogBadRequest{}
}

/*PostLogBadRequest handles this case with default header values.

Log event unsuccessfully ingested
*/
type PostLogBadRequest struct {
}

func (o *PostLogBadRequest) Error() string {
	return fmt.Sprintf("[POST /log][%d] postLogBadRequest ", 400)
}

func (o *PostLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostLogUnauthorized creates a PostLogUnauthorized with default headers values
func NewPostLogUnauthorized() *PostLogUnauthorized {
	return &PostLogUnauthorized{}
}

/*PostLogUnauthorized handles this case with default header values.

Unauthorized request
*/
type PostLogUnauthorized struct {
}

func (o *PostLogUnauthorized) Error() string {
	return fmt.Sprintf("[POST /log][%d] postLogUnauthorized ", 401)
}

func (o *PostLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
