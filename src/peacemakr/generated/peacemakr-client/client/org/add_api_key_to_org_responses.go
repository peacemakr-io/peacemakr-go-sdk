// Code generated by go-swagger; DO NOT EDIT.

package org

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "peacemakr/generated/peacemakr-client/models"
)

// AddAPIKeyToOrgReader is a Reader for the AddAPIKeyToOrg structure.
type AddAPIKeyToOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddAPIKeyToOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddAPIKeyToOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddAPIKeyToOrgBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddAPIKeyToOrgUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddAPIKeyToOrgOK creates a AddAPIKeyToOrgOK with default headers values
func NewAddAPIKeyToOrgOK() *AddAPIKeyToOrgOK {
	return &AddAPIKeyToOrgOK{}
}

/*AddAPIKeyToOrgOK handles this case with default header values.

Successful addition of an API Key to its org
*/
type AddAPIKeyToOrgOK struct {
	Payload *models.APIKey
}

func (o *AddAPIKeyToOrgOK) Error() string {
	return fmt.Sprintf("[POST /org/key][%d] addApiKeyToOrgOK  %+v", 200, o.Payload)
}

func (o *AddAPIKeyToOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAPIKeyToOrgBadRequest creates a AddAPIKeyToOrgBadRequest with default headers values
func NewAddAPIKeyToOrgBadRequest() *AddAPIKeyToOrgBadRequest {
	return &AddAPIKeyToOrgBadRequest{}
}

/*AddAPIKeyToOrgBadRequest handles this case with default header values.

Unable to process request
*/
type AddAPIKeyToOrgBadRequest struct {
}

func (o *AddAPIKeyToOrgBadRequest) Error() string {
	return fmt.Sprintf("[POST /org/key][%d] addApiKeyToOrgBadRequest ", 400)
}

func (o *AddAPIKeyToOrgBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddAPIKeyToOrgUnauthorized creates a AddAPIKeyToOrgUnauthorized with default headers values
func NewAddAPIKeyToOrgUnauthorized() *AddAPIKeyToOrgUnauthorized {
	return &AddAPIKeyToOrgUnauthorized{}
}

/*AddAPIKeyToOrgUnauthorized handles this case with default header values.

Not authenticated to perform request
*/
type AddAPIKeyToOrgUnauthorized struct {
}

func (o *AddAPIKeyToOrgUnauthorized) Error() string {
	return fmt.Sprintf("[POST /org/key][%d] addApiKeyToOrgUnauthorized ", 401)
}

func (o *AddAPIKeyToOrgUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
