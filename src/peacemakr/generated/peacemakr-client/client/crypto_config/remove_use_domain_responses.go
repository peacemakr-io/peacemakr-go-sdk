// Code generated by go-swagger; DO NOT EDIT.

package crypto_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveUseDomainReader is a Reader for the RemoveUseDomain structure.
type RemoveUseDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUseDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRemoveUseDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRemoveUseDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveUseDomainOK creates a RemoveUseDomainOK with default headers values
func NewRemoveUseDomainOK() *RemoveUseDomainOK {
	return &RemoveUseDomainOK{}
}

/*RemoveUseDomainOK handles this case with default header values.

Successfully expired the use domain from service
*/
type RemoveUseDomainOK struct {
}

func (o *RemoveUseDomainOK) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainOK ", 200)
}

func (o *RemoveUseDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUseDomainBadRequest creates a RemoveUseDomainBadRequest with default headers values
func NewRemoveUseDomainBadRequest() *RemoveUseDomainBadRequest {
	return &RemoveUseDomainBadRequest{}
}

/*RemoveUseDomainBadRequest handles this case with default header values.

Unable to process request
*/
type RemoveUseDomainBadRequest struct {
}

func (o *RemoveUseDomainBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainBadRequest ", 400)
}

func (o *RemoveUseDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
