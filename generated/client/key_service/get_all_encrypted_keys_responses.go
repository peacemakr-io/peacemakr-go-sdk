// Code generated by go-swagger; DO NOT EDIT.

package key_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/notasecret/peacemakr-go-sdk/generated/models"
)

// GetAllEncryptedKeysReader is a Reader for the GetAllEncryptedKeys structure.
type GetAllEncryptedKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllEncryptedKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllEncryptedKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllEncryptedKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllEncryptedKeysOK creates a GetAllEncryptedKeysOK with default headers values
func NewGetAllEncryptedKeysOK() *GetAllEncryptedKeysOK {
	return &GetAllEncryptedKeysOK{}
}

/*GetAllEncryptedKeysOK handles this case with default header values.

Returns an array of encrypted keys
*/
type GetAllEncryptedKeysOK struct {
	Payload []*models.EncryptedSymmetricKey
}

func (o *GetAllEncryptedKeysOK) Error() string {
	return fmt.Sprintf("[GET /crypto/symmetric/{encryptingKeyId}][%d] getAllEncryptedKeysOK  %+v", 200, o.Payload)
}

func (o *GetAllEncryptedKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllEncryptedKeysBadRequest creates a GetAllEncryptedKeysBadRequest with default headers values
func NewGetAllEncryptedKeysBadRequest() *GetAllEncryptedKeysBadRequest {
	return &GetAllEncryptedKeysBadRequest{}
}

/*GetAllEncryptedKeysBadRequest handles this case with default header values.

Unable to process request
*/
type GetAllEncryptedKeysBadRequest struct {
}

func (o *GetAllEncryptedKeysBadRequest) Error() string {
	return fmt.Sprintf("[GET /crypto/symmetric/{encryptingKeyId}][%d] getAllEncryptedKeysBadRequest ", 400)
}

func (o *GetAllEncryptedKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
