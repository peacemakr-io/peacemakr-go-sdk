// Code generated by go-swagger; DO NOT EDIT.

package org

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peacemakr-io/peacemakr-go-sdk/generated/models"
)

// NewAddOrganizationParams creates a new AddOrganizationParams object
// with the default values initialized.
func NewAddOrganizationParams() *AddOrganizationParams {
	var ()
	return &AddOrganizationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddOrganizationParamsWithTimeout creates a new AddOrganizationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddOrganizationParamsWithTimeout(timeout time.Duration) *AddOrganizationParams {
	var ()
	return &AddOrganizationParams{

		timeout: timeout,
	}
}

// NewAddOrganizationParamsWithContext creates a new AddOrganizationParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddOrganizationParamsWithContext(ctx context.Context) *AddOrganizationParams {
	var ()
	return &AddOrganizationParams{

		Context: ctx,
	}
}

// NewAddOrganizationParamsWithHTTPClient creates a new AddOrganizationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddOrganizationParamsWithHTTPClient(client *http.Client) *AddOrganizationParams {
	var ()
	return &AddOrganizationParams{
		HTTPClient: client,
	}
}

/*AddOrganizationParams contains all the parameters to send to the API endpoint
for the add organization operation typically these are written to a http.Request
*/
type AddOrganizationParams struct {

	/*Contact*/
	Contact *models.Contact
	/*IDToken*/
	IDToken string
	/*OrgName*/
	OrgName string
	/*StripeCustomerID*/
	StripeCustomerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add organization params
func (o *AddOrganizationParams) WithTimeout(timeout time.Duration) *AddOrganizationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add organization params
func (o *AddOrganizationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add organization params
func (o *AddOrganizationParams) WithContext(ctx context.Context) *AddOrganizationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add organization params
func (o *AddOrganizationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add organization params
func (o *AddOrganizationParams) WithHTTPClient(client *http.Client) *AddOrganizationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add organization params
func (o *AddOrganizationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContact adds the contact to the add organization params
func (o *AddOrganizationParams) WithContact(contact *models.Contact) *AddOrganizationParams {
	o.SetContact(contact)
	return o
}

// SetContact adds the contact to the add organization params
func (o *AddOrganizationParams) SetContact(contact *models.Contact) {
	o.Contact = contact
}

// WithIDToken adds the iDToken to the add organization params
func (o *AddOrganizationParams) WithIDToken(iDToken string) *AddOrganizationParams {
	o.SetIDToken(iDToken)
	return o
}

// SetIDToken adds the idToken to the add organization params
func (o *AddOrganizationParams) SetIDToken(iDToken string) {
	o.IDToken = iDToken
}

// WithOrgName adds the orgName to the add organization params
func (o *AddOrganizationParams) WithOrgName(orgName string) *AddOrganizationParams {
	o.SetOrgName(orgName)
	return o
}

// SetOrgName adds the orgName to the add organization params
func (o *AddOrganizationParams) SetOrgName(orgName string) {
	o.OrgName = orgName
}

// WithStripeCustomerID adds the stripeCustomerID to the add organization params
func (o *AddOrganizationParams) WithStripeCustomerID(stripeCustomerID string) *AddOrganizationParams {
	o.SetStripeCustomerID(stripeCustomerID)
	return o
}

// SetStripeCustomerID adds the stripeCustomerId to the add organization params
func (o *AddOrganizationParams) SetStripeCustomerID(stripeCustomerID string) {
	o.StripeCustomerID = stripeCustomerID
}

// WriteToRequest writes these params to a swagger request
func (o *AddOrganizationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Contact != nil {
		if err := r.SetBodyParam(o.Contact); err != nil {
			return err
		}
	}

	// query param id_token
	qrIDToken := o.IDToken
	qIDToken := qrIDToken
	if qIDToken != "" {
		if err := r.SetQueryParam("id_token", qIDToken); err != nil {
			return err
		}
	}

	// query param orgName
	qrOrgName := o.OrgName
	qOrgName := qrOrgName
	if qOrgName != "" {
		if err := r.SetQueryParam("orgName", qOrgName); err != nil {
			return err
		}
	}

	// query param stripeCustomerId
	qrStripeCustomerID := o.StripeCustomerID
	qStripeCustomerID := qrStripeCustomerID
	if qStripeCustomerID != "" {
		if err := r.SetQueryParam("stripeCustomerId", qStripeCustomerID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
