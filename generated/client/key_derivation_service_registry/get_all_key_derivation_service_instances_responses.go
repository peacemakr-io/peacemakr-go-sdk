// Code generated by go-swagger; DO NOT EDIT.

package key_derivation_service_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/notasecret/peacemakr-go-sdk/generated/models"
)

// GetAllKeyDerivationServiceInstancesReader is a Reader for the GetAllKeyDerivationServiceInstances structure.
type GetAllKeyDerivationServiceInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllKeyDerivationServiceInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllKeyDerivationServiceInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAllKeyDerivationServiceInstancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllKeyDerivationServiceInstancesOK creates a GetAllKeyDerivationServiceInstancesOK with default headers values
func NewGetAllKeyDerivationServiceInstancesOK() *GetAllKeyDerivationServiceInstancesOK {
	return &GetAllKeyDerivationServiceInstancesOK{}
}

/*GetAllKeyDerivationServiceInstancesOK handles this case with default header values.

Get all registred key derivers associated with org
*/
type GetAllKeyDerivationServiceInstancesOK struct {
	Payload []*models.KeyDerivationInstance
}

func (o *GetAllKeyDerivationServiceInstancesOK) Error() string {
	return fmt.Sprintf("[GET /crypto/deriver/all-instances][%d] getAllKeyDerivationServiceInstancesOK  %+v", 200, o.Payload)
}

func (o *GetAllKeyDerivationServiceInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllKeyDerivationServiceInstancesBadRequest creates a GetAllKeyDerivationServiceInstancesBadRequest with default headers values
func NewGetAllKeyDerivationServiceInstancesBadRequest() *GetAllKeyDerivationServiceInstancesBadRequest {
	return &GetAllKeyDerivationServiceInstancesBadRequest{}
}

/*GetAllKeyDerivationServiceInstancesBadRequest handles this case with default header values.

Unable to process request.
*/
type GetAllKeyDerivationServiceInstancesBadRequest struct {
}

func (o *GetAllKeyDerivationServiceInstancesBadRequest) Error() string {
	return fmt.Sprintf("[GET /crypto/deriver/all-instances][%d] getAllKeyDerivationServiceInstancesBadRequest ", 400)
}

func (o *GetAllKeyDerivationServiceInstancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
