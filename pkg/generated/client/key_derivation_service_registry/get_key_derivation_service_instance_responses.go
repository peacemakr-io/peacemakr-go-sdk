// Code generated by go-swagger; DO NOT EDIT.

package key_derivation_service_registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/peacemakr-io/peacemakr-go-sdk/pkg/generated/models"
)

// GetKeyDerivationServiceInstanceReader is a Reader for the GetKeyDerivationServiceInstance structure.
type GetKeyDerivationServiceInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeyDerivationServiceInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetKeyDerivationServiceInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetKeyDerivationServiceInstanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetKeyDerivationServiceInstanceOK creates a GetKeyDerivationServiceInstanceOK with default headers values
func NewGetKeyDerivationServiceInstanceOK() *GetKeyDerivationServiceInstanceOK {
	return &GetKeyDerivationServiceInstanceOK{}
}

/*GetKeyDerivationServiceInstanceOK handles this case with default header values.

Requested key deriver found, details returned.
*/
type GetKeyDerivationServiceInstanceOK struct {
	Payload *models.KeyDerivationInstance
}

func (o *GetKeyDerivationServiceInstanceOK) Error() string {
	return fmt.Sprintf("[GET /crypto/deriver/instance/{keyDerivationInstanceId}][%d] getKeyDerivationServiceInstanceOK  %+v", 200, o.Payload)
}

func (o *GetKeyDerivationServiceInstanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyDerivationInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyDerivationServiceInstanceBadRequest creates a GetKeyDerivationServiceInstanceBadRequest with default headers values
func NewGetKeyDerivationServiceInstanceBadRequest() *GetKeyDerivationServiceInstanceBadRequest {
	return &GetKeyDerivationServiceInstanceBadRequest{}
}

/*GetKeyDerivationServiceInstanceBadRequest handles this case with default header values.

Unable to process request.
*/
type GetKeyDerivationServiceInstanceBadRequest struct {
}

func (o *GetKeyDerivationServiceInstanceBadRequest) Error() string {
	return fmt.Sprintf("[GET /crypto/deriver/instance/{keyDerivationInstanceId}][%d] getKeyDerivationServiceInstanceBadRequest ", 400)
}

func (o *GetKeyDerivationServiceInstanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
