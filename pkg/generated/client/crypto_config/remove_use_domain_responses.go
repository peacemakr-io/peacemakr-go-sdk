// Code generated by go-swagger; DO NOT EDIT.

package crypto_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	models2 "github.com/notasecret/peacemakr-go-sdk/pkg/generated/models"
	"io"

	"github.com/go-openapi/runtime"

	"github.com/go-openapi/strfmt"
)

// RemoveUseDomainReader is a Reader for the RemoveUseDomain structure.
type RemoveUseDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUseDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRemoveUseDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRemoveUseDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewRemoveUseDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewRemoveUseDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRemoveUseDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveUseDomainOK creates a RemoveUseDomainOK with default headers values
func NewRemoveUseDomainOK() *RemoveUseDomainOK {
	return &RemoveUseDomainOK{}
}

/*RemoveUseDomainOK handles this case with default header values.

Successfully expired use doamin.
*/
type RemoveUseDomainOK struct {
}

func (o *RemoveUseDomainOK) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainOK ", 200)
}

func (o *RemoveUseDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUseDomainBadRequest creates a RemoveUseDomainBadRequest with default headers values
func NewRemoveUseDomainBadRequest() *RemoveUseDomainBadRequest {
	return &RemoveUseDomainBadRequest{}
}

/*RemoveUseDomainBadRequest handles this case with default header values.

Unable to process request
*/
type RemoveUseDomainBadRequest struct {
	Payload *models2.ErrorResponse
}

func (o *RemoveUseDomainBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveUseDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models2.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUseDomainUnauthorized creates a RemoveUseDomainUnauthorized with default headers values
func NewRemoveUseDomainUnauthorized() *RemoveUseDomainUnauthorized {
	return &RemoveUseDomainUnauthorized{}
}

/*RemoveUseDomainUnauthorized handles this case with default header values.

Not authenticated to perform request
*/
type RemoveUseDomainUnauthorized struct {
}

func (o *RemoveUseDomainUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainUnauthorized ", 401)
}

func (o *RemoveUseDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUseDomainForbidden creates a RemoveUseDomainForbidden with default headers values
func NewRemoveUseDomainForbidden() *RemoveUseDomainForbidden {
	return &RemoveUseDomainForbidden{}
}

/*RemoveUseDomainForbidden handles this case with default header values.

Not authorized to perform request
*/
type RemoveUseDomainForbidden struct {
}

func (o *RemoveUseDomainForbidden) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainForbidden ", 403)
}

func (o *RemoveUseDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUseDomainInternalServerError creates a RemoveUseDomainInternalServerError with default headers values
func NewRemoveUseDomainInternalServerError() *RemoveUseDomainInternalServerError {
	return &RemoveUseDomainInternalServerError{}
}

/*RemoveUseDomainInternalServerError handles this case with default header values.

Unrecoverable internal error
*/
type RemoveUseDomainInternalServerError struct {
	Payload *models2.ErrorResponse
}

func (o *RemoveUseDomainInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /crypto/useDomain/{useDomainId}][%d] removeUseDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveUseDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models2.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
