// Code generated by go-swagger; DO NOT EDIT.

package crypto_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateCryptoConfigFallbackToCloudReader is a Reader for the UpdateCryptoConfigFallbackToCloud structure.
type UpdateCryptoConfigFallbackToCloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCryptoConfigFallbackToCloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateCryptoConfigFallbackToCloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateCryptoConfigFallbackToCloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCryptoConfigFallbackToCloudOK creates a UpdateCryptoConfigFallbackToCloudOK with default headers values
func NewUpdateCryptoConfigFallbackToCloudOK() *UpdateCryptoConfigFallbackToCloudOK {
	return &UpdateCryptoConfigFallbackToCloudOK{}
}

/*UpdateCryptoConfigFallbackToCloudOK handles this case with default header values.

Successfully updated the fallback to cloud setting on use domain
*/
type UpdateCryptoConfigFallbackToCloudOK struct {
}

func (o *UpdateCryptoConfigFallbackToCloudOK) Error() string {
	return fmt.Sprintf("[PUT /crypto/useDomain/{useDomainId}/enableKDSFallbackToCloud][%d] updateCryptoConfigFallbackToCloudOK ", 200)
}

func (o *UpdateCryptoConfigFallbackToCloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCryptoConfigFallbackToCloudBadRequest creates a UpdateCryptoConfigFallbackToCloudBadRequest with default headers values
func NewUpdateCryptoConfigFallbackToCloudBadRequest() *UpdateCryptoConfigFallbackToCloudBadRequest {
	return &UpdateCryptoConfigFallbackToCloudBadRequest{}
}

/*UpdateCryptoConfigFallbackToCloudBadRequest handles this case with default header values.

Unable to process request
*/
type UpdateCryptoConfigFallbackToCloudBadRequest struct {
}

func (o *UpdateCryptoConfigFallbackToCloudBadRequest) Error() string {
	return fmt.Sprintf("[PUT /crypto/useDomain/{useDomainId}/enableKDSFallbackToCloud][%d] updateCryptoConfigFallbackToCloudBadRequest ", 400)
}

func (o *UpdateCryptoConfigFallbackToCloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
