// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PricingPlan pricing plan
// swagger:model PricingPlan
type PricingPlan struct {

	// billing interval seconds
	// Required: true
	BillingIntervalSeconds *int64 `json:"billingIntervalSeconds"`

	// number of keys included
	// Required: true
	NumberOfKeysIncluded *int64 `json:"numberOfKeysIncluded"`

	// price
	// Required: true
	Price *int64 `json:"price"`

	// stripe plan ID
	// Required: true
	StripePlanID *string `json:"stripePlanID"`

	// stripe product ID
	// Required: true
	StripeProductID *string `json:"stripeProductID"`
}

// Validate validates this pricing plan
func (m *PricingPlan) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingIntervalSeconds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberOfKeysIncluded(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStripePlanID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStripeProductID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PricingPlan) validateBillingIntervalSeconds(formats strfmt.Registry) error {

	if err := validate.Required("billingIntervalSeconds", "body", m.BillingIntervalSeconds); err != nil {
		return err
	}

	return nil
}

func (m *PricingPlan) validateNumberOfKeysIncluded(formats strfmt.Registry) error {

	if err := validate.Required("numberOfKeysIncluded", "body", m.NumberOfKeysIncluded); err != nil {
		return err
	}

	return nil
}

func (m *PricingPlan) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", m.Price); err != nil {
		return err
	}

	return nil
}

func (m *PricingPlan) validateStripePlanID(formats strfmt.Registry) error {

	if err := validate.Required("stripePlanID", "body", m.StripePlanID); err != nil {
		return err
	}

	return nil
}

func (m *PricingPlan) validateStripeProductID(formats strfmt.Registry) error {

	if err := validate.Required("stripeProductID", "body", m.StripeProductID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PricingPlan) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PricingPlan) UnmarshalBinary(b []byte) error {
	var res PricingPlan
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
